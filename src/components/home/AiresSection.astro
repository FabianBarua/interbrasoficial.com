---
import { getI18NGlobal, getValueFromKey } from "@/i18n";
import { getUrls } from "@/shared/newUtils";

const { currentLocale } = Astro;
const i18n_global = getI18NGlobal({ currentLocale });
const t_global = (key: string) => {
  return getValueFromKey(key, i18n_global);
};

const items = [
  {
    title: "home.ac.benefit_silent.title",
    description: "home.ac.benefit_silent.description",
    image: "/newVersion/aires-silencio.svg",
  },
  {
    title: "home.ac.benefit_energy_saving.title",
    description: "home.ac.benefit_energy_saving.description",
    image: "/newVersion/aires-ahorro.svg",
  },
  {
    title: "home.ac.benefit_clean_air.title",
    description: "home.ac.benefit_clean_air.description",
    image: "/newVersion/aires-limpio.svg",
  },
];

const urlAire = (
  await getUrls({
    currentLocale,
    table: "categories",
    category_id: "aires",
  })
)[0].url;
---

<section
  class="bg-neutral-100 lg:mt-16 lg:rounded-t-[150px] mx-auto max-w-[1536px] py-12 lg:pt-32 w-full lg:w-[80%] lg:pb-8 flex flex-col lg:flex-row justify-center items-center gap-10 xl:gap-32 px-6 lg:px-0"
>
  <div class="flex flex-col justify-center mb-10 lg:mb-0">
    <img
      src="/newVersion/aire.webp"
      class="xl:h-72 w-min h-52 drop-shadow-[0_10px_30px_rgba(0,_0,_0,_.3)] object-contain"
      alt="aire"
    />
    <a
      id="pin2"
      class="hidden lg:block relative mx-auto bg-black px-3 py-1 rounded-xl text-white font-medium hover:bg-interbrasGreen-500 transition-all hover:-translate-y-2 hover:scale-110"
      href={urlAire}
    >
      {t_global("home.ac.seeAc")}
    </a>
  </div>

  <div class="text-neutral-800">
    <h2 class="text-3xl text-center font-extrabold mb-5">
      {t_global("home.ac.why.first")}
      <span class="relative text-interbrasGreen-500">
        {t_global("home.ac.why.second")}
        <a
          href={urlAire}
          id="pin"
          class="text-neutral-800 font-semibold absolute text-base leading-4 text-center left-1/2 -translate-x-1/2 -top-14 bg-interbrasGreen-300 px-4 py-2 rounded-xl origin-bottom animate-jumpinfinite2"
        >
          {t_global("home.ac.title")}
        </a>
      </span>
      {t_global("home.ac.why.third")}
    </h2>

    {
      items.map((item) => (
        <div class=" mt-3 items-center flex gap-5">
          <div class=" size-16 xl:size-20 shrink-0 bg-interbrasGreen-300 rounded-full p-5 flex justify-center items-center">
            <img
              width="40px"
              height="40px"
              class=" h-auto w-full"
              src={item.image}
              alt="imagen de beneficios"
            />
          </div>
          <div class=" max-w-[400px] mb-1">
            <h4 class=" text-xl font-bold">{t_global(item.title)}</h4>
            <p class=" leading-4 text-sm">{t_global(item.description)}</p>
          </div>
        </div>
      ))
    }

    <div class="mt-9">
      <a
        id="pin2"
        class="block w-[80%] lg:hidden relative mx-auto bg-black px-3 py-3 rounded-xl text-center text-white font-medium hover:bg-interbrasGreen-500 transition-all hover:-translate-y-2 hover:scale-105"
        href={urlAire}
      >
        {t_global("home.ac.seeAc")}
      </a>
    </div>
  </div>
</section>

<style>
  #pin::before {
    content: "";
    position: absolute;
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 10px solid theme("colors.interbrasGreen.300");
    rotate: 180deg;
    top: 100%;
  }

  #pin2::before {
    content: "";
    position: absolute;
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid theme("colors.black");
    rotate: 180deg;
    bottom: 100%;
    left: 50%;
    transform: translateX(50%);
    transition-property: color, background-color, border-color,
      text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }

  #pin2:hover::before {
    border-top: 10px solid theme("colors.interbrasGreen.500");
  }

  .animate-jumpinfinite2 {
    animation: jumpinfinite2 var(--duration, 2s) ease calc(var(--i, 0) * 0.2s)
      infinite;
  }

  @keyframes jumpinfinite2 {
    0%,
    100% {
      transform: translateY(5px) translateX(-50%);
    }
    50% {
      transform: translateY(-5px) translateX(-50%);
    }
  }
</style>
